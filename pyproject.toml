[build-system]
requires = [
    "hatchling<=1.21.0",
    "setuptools-git-versioning",
]
build-backend = "hatchling.build"

[tool.setuptools-git-versioning]
enabled = true

[project]
name = "EasyImaging"
dynamic = ["version"]
description = "Python package for bragg-edge analysis"
readme = "README.md"
authors = [{name = "EasyScience contributors"}]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 3 - Alpha"
]
requires-python = ">=3.9,<3.12"
dependencies = [
    "easyscience>=0.6.0",
    "scipp>=23.12.0",
]

[project.optional-dependencies]
dev = [
    "build",
    "codecov>=2.1.11",
    "coverage",
    "coveralls",
    "flake8>=6.0.0",
    "ipykernel",
    "jupyter>=1.0.0",
    "jupyterlab",
    "plopp",
    "pytest>=5.2",
    "pytest-cov>=3.0.0",
    "ruff",
    "toml>=0.10",
    "yapf>=0.31.0",
]
docs = [
    "myst_parser",
    "nbsphinx",
    "sphinx_autodoc_typehints",
    "sphinx_book_theme",
    "sphinx-copybutton",
    "toml"
]

[project.urls]
homepage = "https://docs.easyimaging.org"
documentation = "https://docs.easyimaging.org"

[tool.hatch.version]
path = "src/easyimaging/__version__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
packages = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/easyimaging"]

[tool.coverage.run]
source = ["src/easyimaging"]

[tool.github.info]
organization = 'easyScience'
repo = "easyimaging"

[tool.ruff]
line-length = 127
exclude = [
    "docs",
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.per-file-ignores]
# allow asserts in test files
"*test_*.py" = ["S101"]

[tool.ruff.lint]
ignore-init-module-imports = true
select = [
    # flake8 settings from existing CI setup
    "E9", "F63", "F7", "F82",
    # Code should be polished to fulfill all cases below
    # https://docs.astral.sh/ruff/rules/
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
#    "UP",
    # flake8-bugbear
#    "B",
    # flake8-simplify
#    "SIM",
    # isort
    "I",
    # flake8-bandit
    "S",
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{3.9,3.10,3.11,3.12}
[gh-actions]
python =
        3.9: py39
        3.10: py310
        3.11: py311
        3.12: py312
[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows
[testenv]
passenv =
    CI
    GITHUB_ACTIONS
    GITHUB_ACTION
    GITHUB_REF
    GITHUB_REPOSITORY
    GITHUB_HEAD_REF
    GITHUB_RUN_ID
    GITHUB_SHA
    COVERAGE_FILE
deps = coverage
commands =
    pip install -e '.[dev]'
    pytest --cov --cov-report=xml
"""
